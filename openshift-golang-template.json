{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "golang",
    "annotations": {
      "description": "Application template for Golang",
      "tags": "instant-app,golang",
      "iconClass": "icon-golang"
    }
  },
  "labels": {
      "application": "golang",
      "template": "golang",
      "createdBy": "amsokol"
  },
  "parameters": [
      {
         "description": "The name for the application.",
         "name": "APPLICATION_NAME",
         "value": "golang-app"
      },
      {
         "description": "Custom hostname for service routes",
         "name": "APPLICATION_HOSTNAME",
         "required": true
      },
      {
         "description": "Git source URI for application",
         "name": "SOURCE_REPOSITORY_URL",
         "value": "https://github.com/amsokol/openshift-golang-template.git"
      },
      {
         "description": "Git branch/tag reference",
         "name": "SOURCE_REPOSITORY_REF",
         "value": "master"
      },
      {
        "name": "CONTEXT_DIR",
        "description": "Set this to the relative path to your project if it is not in the root of your repository",
        "value": "example"
      },
      {
        "name": "GO15VENDOREXPERIMENT",
        "description": "Enable golang 1.5 experimental vendoring",
        "value": "1"
      },
      {
         "description": "Github trigger secret",
         "name": "GITHUB_TRIGGER_SECRET",
         "from": "[a-zA-Z0-9]{40}",
         "generate": "expression"
      },
      {
         "description": "Generic build trigger secret",
         "name": "GENERIC_TRIGGER_SECRET",
         "from": "[a-zA-Z0-9]{40}",
         "generate": "expression"
      }
   ],
   "objects": [
     {
       "kind": "BuildConfig",
       "apiVersion": "v1",
       "metadata": {
         "name": "${APPLICATION_NAME}"
       },
       "spec": {
         "triggers": [
            {
               "type": "Generic",
               "generic": {
                  "secret": "${GENERIC_TRIGGER_SECRET}"
               }
            },
            {
               "type": "GitHub",
               "github": {
                  "secret": "${GITHUB_TRIGGER_SECRET}"
               }
            },
            {
               "type": "ImageChange",
               "imageChange": {}
            }
         ],
         "source": {
            "type": "Git",
            "git": {
               "uri": "${SOURCE_REPOSITORY_URL}",
               "ref": "${SOURCE_REPOSITORY_REF}"
            },
            "contextDir": "${CONTEXT_DIR}"
         },
         "strategy": {
            "type": "Source",
            "sourceStrategy": {
               "from": {
                  "kind": "DockerImage",
                  "name": "docker.io/amsokol/golang-openshift:1.5.3"
               },
               "env": [
                   {
                      "name": "SOURCE_REPOSITORY_URL",
                      "value": "${SOURCE_REPOSITORY_URL}"
                   },
                  {
                     "name": "CONTEXT_DIR",
                     "value": "${CONTEXT_DIR}"
                  },
                  {
                    "name": "GO15VENDOREXPERIMENT",
                    "value": "${GO15VENDOREXPERIMENT}"
                  }
               ]
            }
         },
         "output": {
            "to": {
               "kind": "ImageStreamTag",
               "name": "${APPLICATION_NAME}:latest"
            }
         }
      }
   },
   {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
         "name": "${APPLICATION_NAME}"
      },
      "spec": {
         "dockerImageRepository": "",
         "tags": [
            {
               "name": "latest"
            }
         ]
      }
   },
   {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
         "name": "${APPLICATION_NAME}",
         "labels": {
            "deploymentConfig": "${APPLICATION_NAME}"
         }
      },
      "spec": {
         "strategy": {
            "type": "Recreate"
         },
         "triggers": [
            {
               "type": "ImageChange",
               "imageChangeParams": {
                  "automatic": true,
                  "containerNames": [
                     "${APPLICATION_NAME}"
                  ],
                  "from": {
                     "kind": "ImageStreamTag",
                     "name": "${APPLICATION_NAME}:latest"
                  }
               }
            },
            {
               "type": "ConfigChange"
            }
         ],
         "replicas": 1,
         "selector": {
            "deploymentConfig": "${APPLICATION_NAME}"
         },
         "template": {
            "metadata": {
               "labels": {
                  "deploymentConfig": "${APPLICATION_NAME}"
               }
            },
            "spec": {
               "containers": [
                  {
                     "name": "${APPLICATION_NAME}",
                     "image": "${APPLICATION_NAME}",
                     "ports": [
                        {
                           "name": "${APPLICATION_NAME}-http",
                           "containerPort": 8080,
                           "protocol": "TCP"
                        }
                     ],
                     "resources": {},
                     "imagePullPolicy": "Always",
                     "env": [
                        {
                           "name": "ROOT_PACKAGE",
                           "value": "${ROOT_PACKAGE}"
                        }
                     ],
                     "securityContext": {
                        "capabilities": {},
                        "privileged": false
                     }
                  }
               ],
               "restartPolicy": "Always",
               "dnsPolicy": "ClusterFirst"
            }
         }
      }
   },
   {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}-http",
        "annotations": {
           "description": "The web server's http port"
        }
      },
      "spec": {
        "ports": [
           {
              "protocol": "TCP",
              "port": 8080,
              "targetPort": 8080
           }
        ],
        "selector": {
           "deploymentConfig": "${APPLICATION_NAME}"
        }
      }
   },
   {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
         "name": "${APPLICATION_NAME}-http-route",
         "annotations": {
            "description": "Route for application's http service"
         }
      },
      "spec": {
         "host": "${APPLICATION_HOSTNAME}",
         "to": {
            "kind": "Service",
            "name": "${APPLICATION_NAME}-http"
         }
      }
   }
 ]
}
